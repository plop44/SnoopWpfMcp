<Window x:Class="TestApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="WPF Test Application - Enhanced Controls" Height="700" Width="900">
    
    <Window.Resources>
        <!-- Base Styles -->
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        
        <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="DarkBlue"/>
        </Style>
        
        <Style x:Key="BaseButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="LightBlue"/>
            <Setter Property="BorderBrush" Value="DarkBlue"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightCyan"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Custom Button Template -->
        <ControlTemplate x:Key="CustomButtonTemplate" TargetType="Button">
            <Border x:Name="border" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="8">
                <Grid>
                    <Ellipse x:Name="highlight" Fill="White" Opacity="0" 
                             Width="20" Height="20" HorizontalAlignment="Left" 
                             VerticalAlignment="Top" Margin="5"/>
                    <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding Content}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="Orange"/>
                    <Setter TargetName="highlight" Property="Opacity" Value="0.3"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="Background" Value="Red"/>
                    <Setter TargetName="highlight" Property="Opacity" Value="0.6"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <!-- Custom ProgressBar Template -->
        <ControlTemplate x:Key="CustomProgressBarTemplate" TargetType="ProgressBar">
            <Border BorderBrush="Gray" BorderThickness="2" CornerRadius="5">
                <Grid>
                    <Rectangle Fill="LightGray" RadiusX="3" RadiusY="3"/>
                    <Rectangle x:Name="PART_Track" Fill="Green" RadiusX="3" RadiusY="3"
                               HorizontalAlignment="Left"/>
                </Grid>
            </Border>
        </ControlTemplate>
        
        <!-- Sample Data for Lists -->
        <x:Array x:Key="SampleItems" Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
            <sys:String>Item 1</sys:String>
            <sys:String>Item 2</sys:String>
            <sys:String>Item 3</sys:String>
            <sys:String>Item 4</sys:String>
        </x:Array>
    </Window.Resources>
    
    <Grid>
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Data Actions">
                    <MenuItem Header="Clear All Data" Command="{Binding ClearDataCommand}"/>
                    <MenuItem Header="Add Sample Person" Command="{Binding AddSampleDataCommand}"/>
                    <MenuItem Header="Show Info" Command="{Binding ShowInfoCommand}"/>
                    <Separator/>
                    <MenuItem Header="Reset Form" Command="{Binding ResetFormCommand}"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="View">
                    <MenuItem Header="Refresh" InputGestureText="F5"/>
                    <MenuItem Header="Toggle Theme"/>
                </MenuItem>
                <MenuItem Header="Help">
                    <MenuItem Header="About"/>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Header -->
        <TextBlock Grid.Row="0" Text="WPF Test Application - Enhanced Controls Testing" 
                   Style="{StaticResource HeaderTextBlockStyle}"
                   FontSize="16" 
                   HorizontalAlignment="Center"
                   Margin="10"/>
        
        <!-- Main Content with TabControl -->
        <TabControl Grid.Row="1" Margin="10">
            
            <!-- Basic Controls Tab -->
            <TabItem Header="Basic Controls">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="Process Information"/>
                        <TextBlock x:Name="ProcessInfoText" Style="{StaticResource BaseTextBlockStyle}" FontWeight="Bold"/>
                        <TextBlock x:Name="ClickCounterText" Text="Button clicks: 0" 
                                   Style="{StaticResource BaseTextBlockStyle}"
                                   FontWeight="Bold" Foreground="Blue"/>
                        
                        <Button x:Name="UpdateButton" Content="Update UI" 
                                Style="{StaticResource BaseButtonStyle}"
                                Click="UpdateButton_Click" HorizontalAlignment="Left"/>
                        
                        <Button Content="Custom Template Button" 
                                Template="{StaticResource CustomButtonTemplate}"
                                Background="LightGreen" Margin="5" Padding="15,8"/>
                        
                        <Separator Margin="0,10"/>
                        
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="Form Controls"/>
                        
                        <WrapPanel>
                            <CheckBox Content="Option 1" Margin="5"/>
                            <CheckBox Content="Option 2" IsChecked="True" Margin="5"/>
                            <CheckBox Content="Option 3" IsThreeState="True" IsChecked="{x:Null}" Margin="5"/>
                        </WrapPanel>
                        
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <RadioButton Content="Choice A" GroupName="TestGroup" Margin="5"/>
                            <RadioButton Content="Choice B" GroupName="TestGroup" IsChecked="True" Margin="5"/>
                            <RadioButton Content="Choice C" GroupName="TestGroup" Margin="5"/>
                        </StackPanel>
                        
                        <DatePicker Margin="5" Width="200" HorizontalAlignment="Left"/>
                        
                        <ComboBox Margin="5" Width="200" HorizontalAlignment="Left"
                                  ItemsSource="{StaticResource SampleItems}"/>
                        
                        <Slider Minimum="0" Maximum="100" Value="50" Margin="5" Width="200" HorizontalAlignment="Left"/>
                        
                        <ProgressBar Value="75" Height="20" Margin="5" Width="200" HorizontalAlignment="Left"/>
                        <ProgressBar Value="35" Height="20" Margin="5" Width="200" HorizontalAlignment="Left"
                                     Template="{StaticResource CustomProgressBarTemplate}"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            
            <!-- Layout Panels Tab -->
            <TabItem Header="Layout Panels">
                <TabControl>
                    <TabItem Header="DockPanel">
                        <DockPanel LastChildFill="True" Margin="10">
                            <Button DockPanel.Dock="Top" Content="Docked Top" Style="{StaticResource BaseButtonStyle}"/>
                            <Button DockPanel.Dock="Bottom" Content="Docked Bottom" Style="{StaticResource BaseButtonStyle}"/>
                            <Button DockPanel.Dock="Left" Content="Left" Style="{StaticResource BaseButtonStyle}"/>
                            <Button DockPanel.Dock="Right" Content="Right" Style="{StaticResource BaseButtonStyle}"/>
                            <TextBlock Text="This fills the remaining space in the DockPanel" 
                                       Style="{StaticResource BaseTextBlockStyle}"
                                       Background="LightYellow" 
                                       TextAlignment="Center" 
                                       VerticalAlignment="Center"/>
                        </DockPanel>
                    </TabItem>
                    
                    <TabItem Header="WrapPanel">
                        <ScrollViewer>
                            <WrapPanel Margin="10">
                                <Button Content="Button 1" Style="{StaticResource BaseButtonStyle}" Width="80"/>
                                <Button Content="Button 2" Style="{StaticResource BaseButtonStyle}" Width="80"/>
                                <Button Content="Button 3" Style="{StaticResource BaseButtonStyle}" Width="80"/>
                                <Button Content="Button 4" Style="{StaticResource BaseButtonStyle}" Width="80"/>
                                <Button Content="Button 5" Style="{StaticResource BaseButtonStyle}" Width="80"/>
                                <Button Content="Button 6" Style="{StaticResource BaseButtonStyle}" Width="80"/>
                                <Button Content="Button 7" Style="{StaticResource BaseButtonStyle}" Width="80"/>
                                <Button Content="Button 8" Style="{StaticResource BaseButtonStyle}" Width="80"/>
                            </WrapPanel>
                        </ScrollViewer>
                    </TabItem>
                    
                    <TabItem Header="UniformGrid">
                        <UniformGrid Rows="2" Columns="3" Margin="10">
                            <Button Content="1,1" Style="{StaticResource BaseButtonStyle}"/>
                            <Button Content="1,2" Style="{StaticResource BaseButtonStyle}"/>
                            <Button Content="1,3" Style="{StaticResource BaseButtonStyle}"/>
                            <Button Content="2,1" Style="{StaticResource BaseButtonStyle}"/>
                            <Button Content="2,2" Style="{StaticResource BaseButtonStyle}"/>
                            <Button Content="2,3" Style="{StaticResource BaseButtonStyle}"/>
                        </UniformGrid>
                    </TabItem>
                    
                    <TabItem Header="Canvas">
                        <Canvas Margin="10" Background="LightGray">
                            <Rectangle Canvas.Left="50" Canvas.Top="30" Width="60" Height="40" Fill="Red"/>
                            <Ellipse Canvas.Left="150" Canvas.Top="50" Width="80" Height="60" Fill="Blue"/>
                            <TextBlock Canvas.Left="100" Canvas.Top="120" Text="Canvas Positioning" 
                                       Style="{StaticResource HeaderTextBlockStyle}"/>
                            <Button Canvas.Left="200" Canvas.Top="150" Content="Canvas Button" 
                                    Style="{StaticResource BaseButtonStyle}"/>
                        </Canvas>
                    </TabItem>
                </TabControl>
            </TabItem>
            
            <!-- Data Controls Tab -->
            <TabItem Header="Data Controls">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <StackPanel Grid.Column="0" Margin="5">
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="ListBox"/>
                        <ListBox Height="100" Margin="5" ItemsSource="{StaticResource SampleItems}"/>
                        
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="ListView"/>
                        <ListView Height="100" Margin="5" ItemsSource="{StaticResource SampleItems}"/>
                        
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="ComboBox"/>
                        <ComboBox Margin="5" ItemsSource="{StaticResource SampleItems}" SelectedIndex="0"/>
                    </StackPanel>
                    
                    <StackPanel Grid.Column="1" Margin="5">
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="TreeView"/>
                        <TreeView Height="200" Margin="5">
                            <TreeViewItem Header="Root Item 1" IsExpanded="True">
                                <TreeViewItem Header="Child 1.1"/>
                                <TreeViewItem Header="Child 1.2" IsExpanded="True">
                                    <TreeViewItem Header="Grandchild 1.2.1"/>
                                </TreeViewItem>
                            </TreeViewItem>
                            <TreeViewItem Header="Root Item 2">
                                <TreeViewItem Header="Child 2.1"/>
                                <TreeViewItem Header="Child 2.2"/>
                            </TreeViewItem>
                        </TreeView>
                    </StackPanel>
                </Grid>
            </TabItem>
            
            <!-- Text and Input Tab -->
            <TabItem Header="Text &amp; Input">
                <StackPanel Margin="10">
                    <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="Text Input Controls"/>
                    
                    <TextBox Text="Single line TextBox" Margin="5" Width="300" HorizontalAlignment="Left"/>
                    <TextBox Text="Password TextBox" Margin="5" Width="300" HorizontalAlignment="Left" 
                             Background="LightYellow" Foreground="Purple"/>
                    
                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" Text="Multi-line TextBox:"/>
                    <TextBox Height="100" Margin="5" Width="400" HorizontalAlignment="Left"
                             TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"
                             Text="This is a multi-line TextBox.&#x0a;You can enter multiple lines of text here.&#x0a;It supports word wrapping and scrolling."/>
                    
                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" Text="RichTextBox:"/>
                    <RichTextBox Height="100" Margin="5" Width="400" HorizontalAlignment="Left">
                        <FlowDocument>
                            <Paragraph>
                                This is a <Bold>RichTextBox</Bold> with <Italic>formatted</Italic> text.
                                <LineBreak/>
                                It supports <Underline>rich formatting</Underline>.
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </StackPanel>
            </TabItem>
            
            <!-- DataGrid Tab -->
            <TabItem Header="DataGrid &amp; Validation">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlockStyle}" 
                               Text="DataGrid with Data Validation (IDataErrorInfo)" Margin="0,0,0,10"/>
                    
                    <DataGrid Grid.Row="1" x:Name="PersonDataGrid" 
                              ItemsSource="{Binding People}"
                              AutoGenerateColumns="False" 
                              CanUserAddRows="True"
                              CanUserDeleteRows="True"
                              GridLinesVisibility="All"
                              HeadersVisibility="All"
                              Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="First Name" 
                                                Binding="{Binding FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                                Width="120"/>
                            <DataGridTextColumn Header="Last Name" 
                                                Binding="{Binding LastName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                                Width="120"/>
                            <DataGridTextColumn Header="Age" 
                                                Binding="{Binding Age, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                                Width="80"/>
                            <DataGridTextColumn Header="Email" 
                                                Binding="{Binding Email, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                                Width="200"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    
                    <TextBlock Grid.Row="2" Style="{StaticResource HeaderTextBlockStyle}" 
                               Text="Add New Person (Form with Validation)" Margin="0,10,0,5"/>
                    
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Column="0" Text="First Name:" VerticalAlignment="Center" Margin="5"/>
                        <TextBox Grid.Column="1" x:Name="FirstNameTextBox" 
                                 Text="{Binding FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="5"/>
                        
                        <TextBlock Grid.Column="2" Text="Last Name:" VerticalAlignment="Center" Margin="5"/>
                        <TextBox Grid.Column="3" x:Name="LastNameTextBox" 
                                 Text="{Binding LastName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="5"/>
                        
                        <TextBlock Grid.Column="4" Text="Age:" VerticalAlignment="Center" Margin="5"/>
                        <TextBox Grid.Column="5" x:Name="AgeTextBox" 
                                 Text="{Binding Age, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="5"/>
                        
                        <TextBlock Grid.Column="6" Text="Email:" VerticalAlignment="Center" Margin="5"/>
                        <TextBox Grid.Column="7" x:Name="EmailTextBox" 
                                 Text="{Binding Email, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="5"/>
                        
                        <Button Grid.Column="8" Content="Add Person" 
                                Style="{StaticResource BaseButtonStyle}"
                                Click="AddPersonButton_Click" Margin="10,5"/>
                    </Grid>
                </Grid>
            </TabItem>
            
            <!-- Instructions Tab -->
            <TabItem Header="Instructions">
                <StackPanel Margin="20">
                    <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="Injection Testing Instructions"/>
                    <TextBlock Text="This enhanced WPF application is used to test the WpfInspector injection with various controls." 
                               Style="{StaticResource BaseTextBlockStyle}"
                               TextWrapping="Wrap" Margin="0,0,0,10"/>
                    
                    <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="Steps:"/>
                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" TextWrapping="Wrap" Margin="0,0,0,5">
                        1. Keep this application running
                    </TextBlock>
                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" TextWrapping="Wrap" Margin="0,0,0,5">
                        2. Note the Process ID displayed in the Basic Controls tab
                    </TextBlock>
                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" TextWrapping="Wrap" Margin="0,0,0,5">
                        3. Run the Injector with this Process ID: Injector.exe [ProcessId]
                    </TextBlock>
                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" TextWrapping="Wrap" Margin="0,0,0,5">
                        4. The injector should inject WpfInspector and receive a "PONG" response to its "PING"
                    </TextBlock>
                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" TextWrapping="Wrap" Margin="0,10,0,5">
                        5. Test various controls across different tabs to verify inspection capabilities
                    </TextBlock>
                </StackPanel>
            </TabItem>
            
        </TabControl>
        
        <!-- Footer -->
        <StackPanel Grid.Row="2" Orientation="Vertical" Margin="10">
            <TextBlock Text="{Binding StatusMessage}" 
                       Style="{StaticResource BaseTextBlockStyle}"
                       FontWeight="Bold" 
                       Foreground="DarkGreen"
                       HorizontalAlignment="Center"/>
            <TextBlock Text="Ready for injection testing with enhanced WPF controls..." 
                       Style="{StaticResource BaseTextBlockStyle}"
                       FontStyle="Italic" 
                       HorizontalAlignment="Center"/>
        </StackPanel>
    </Grid>
</Window>
